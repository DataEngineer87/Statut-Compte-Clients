name: CI/CD Docker FastAPI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout du code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Setup Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      # 3️⃣ Installer les dépendances et lancer les tests
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run unit tests
        run: |
          pytest tests/ --maxfail=1 --disable-warnings -q

      # 4️⃣ Login Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 5️⃣ Build Docker image
      - name: Build Docker image
        run: |
          docker build -t alseny87/statusclients-api:latest .

      # 6️⃣ Push Docker image
      - name: Push Docker image
        run: |
          docker push alseny87/statusclients-api:latest

      # 7️⃣ Optional: Test API inside container
      - name: Run container and test /predict
        run: |
          docker run -d -p 8000:8000 --name test-api alseny87/statusclients-api:latest
          sleep 5
          python - <<'EOF'
import requests
url = "http://127.0.0.1:8000/predict"
data = {
    "gender": "Male",
    "marital_status": "Single",
    "employment_status": "Employed",
    "education_level": "Bachelor",
    "subscription_type": "Premium",
    "age_group": "35-44",
    "number_of_children": 2,
    "children_per_age": 0.5,
    "log_annual_income": 10.5,
    "country": "France"
}
r = requests.post(url, json=data)
assert r.status_code == 200, "API did not return 200 OK"
assert "prediction" in r.json(), "No prediction in response"
print("/predict endpoint test passed successfully")
EOF
          docker stop test-api
          docker rm test-api
