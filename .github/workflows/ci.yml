name: CI - Account Status Prediction

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-docker:
    runs-on: ubuntu-latest

    steps:
      # 1️Clonage du  dépôt
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️Configuation de Python pour les tests unitaires
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      # 3️Installation des dépendances Python
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest requests fastapi uvicorn docker

      # 4️Exécution des tests unitaires
      - name: Run unit tests
        run: |
          pytest tests/ --maxfail=1 --disable-warnings -q

      # 5️Construction de l’image Docker
      - name: Build Docker image
        run: |
          sudo docker build -t statusclients-api .

      # 6️Lancement de conteneur Docker
      - name: Run Docker container
        run: |
          sudo docker run -d --name statusclients-api -p 8000:8000 statusclients-api
          sleep 5  # en attente de démarragede  FastAPI 

      # 7️Teste de l’API dans le conteneur
      - name: Test API endpoint
        run: |
          python - <<'EOF'
          import requests
          url = "http://127.0.0.1:8000/predict"
          data = {
              "gender": "Male",
              "marital_status": "Single",
              "employment_status": "Employed",
              "education_level": "Bachelor",
              "subscription_type": "Premium",
              "age_group": "35-44",
              "number_of_children": 2,
              "children_per_age": 0.5,
              "log_annual_income": 10.5,
              "country": "France"
          }
          r = requests.post(url, json=data)
          print("Status:", r.status_code)
          print("Response:", r.json())
          assert r.status_code == 200, "API did not return 200 OK"
          assert "prediction" in r.json(), "No prediction in response"
          print("/predict endpoint test passed successfully")
          EOF

      # 8️Nettoyage de conteneur après le test
      - name: Cleanup Docker
        run: |
          sudo docker stop statusclients-api
          sudo docker rm statusclients-api
